---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: flame-controller
  name: flame-controller
  namespace: flame
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: flame-controller
  template:
    metadata:
      labels:
        k8s-app: flame-controller
    spec:
      containers:
        - env:
            - name: MIX_ENV
              value: prod
            - name: BONNY_OPERATOR_NAME
              value: flame-controller
            - name: BONNY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: BONNY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: BONNY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: BONNY_POD_SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
          image: eigr/flame-k8s-controller:0.1.0
          name: flame-controller
          ports:
            - containerPort: 9001
              name: webhooks
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 200m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
          volumeMounts:
            - mountPath: /mnt/cert
              name: certs
      initContainers:
        - args:
            - eval
            - FlameK8sController.Webhooks.bootstrap_tls(:prod, "tls-certs")
          image: eigr/flame-k8s-controller:0.1.0
          name: init-certificates
      serviceAccountName: flame-controller
      volumes:
        - name: certs
          secret:
            optional: true
            secretName: tls-certs
